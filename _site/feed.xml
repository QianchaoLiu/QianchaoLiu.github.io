<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Q.Liu</title>
    <description>Welcome to Q.Liu&#39;s Homepage. Here you can find something about my research interests.</description>
    <link>http://qianchaoliu.github.io//</link>
    <atom:link href="http://qianchaoliu.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 22 Mar 2016 19:08:10 +0800</pubDate>
    <lastBuildDate>Tue, 22 Mar 2016 19:08:10 +0800</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>LSTM定义及实现</title>
        <description>&lt;p&gt;    市面上的深度学习框架不断发布，包括：ConvNet,Caffe(图像)以及Tensorflow，其中最引入瞩目的莫过于来自Google的Tensorflow，在这篇文章中，将对提供Python API的Tensorflow以及Theano作简要介绍。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;1.背景&lt;/h3&gt;
&lt;p&gt;    Theano最初是被设计成一套符号表达系统，Tensorflow类似于Theano，也属于符号编程框架	（微软开源的CNTK也是如此）。&lt;/p&gt;

&lt;p&gt;    选择合适的层数，每层的神经元数量，激活函数，损失函数，正则化的参数，然后使用validation数据来判定这次训练的效果。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2.简介&lt;/h3&gt;
&lt;p&gt;    下面将以Theano为例，通过官方给出的Tutorial介绍其基本框架:   &lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;2.1 基础定义&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theano&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_tm2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_tm1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_tm2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_tm1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;sequences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;outputs_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;taps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])],&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;non_sequences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;section-3&quot;&gt;2.1.5 稀疏&lt;/h4&gt;
&lt;p&gt;    Theano专门对稀疏矩阵制定了处理策略，稀疏矩阵中，只有非0元素才会被存储，&lt;/p&gt;

&lt;h4 id=&quot;other-key-words&quot;&gt;2.2 Other key words:&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;theano.tensor.ones_like(x)&lt;/strong&gt; &lt;br /&gt;
Parameters:	x – tensor that has same shape as output
Returns a tensor filled with 1s that has same shape as x.&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;Reference&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;LISA lab &lt;a href=&quot;http://www.deeplearning.net/tutorial/index.html&quot;&gt;Theano 0.7 documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;赵孽 &lt;a href=&quot;https://www.zhihu.com/question/35485591&quot;&gt;如何评价 Theano？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;松尾丰 &lt;a href=&quot;http://book.douban.com/subject/26698202/&quot;&gt;人工智能狂潮&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Kenneth Tran &lt;a href=&quot;https://github.com/zer0n/deepframeworks/blob/master/README.Kenneth Tran md?utm_source=tuicool&amp;amp;utm_medium=referral&quot;&gt;Evaluation of Deep Learning Toolkits&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 17 Feb 2016 18:00:04 +0800</pubDate>
        <link>http://qianchaoliu.github.io//liuqianchao/update/2016/02/17/LSTM%E5%AE%9A%E4%B9%89%E5%8F%8A%E5%AE%9E%E7%8E%B0/</link>
        <guid isPermaLink="true">http://qianchaoliu.github.io//liuqianchao/update/2016/02/17/LSTM%E5%AE%9A%E4%B9%89%E5%8F%8A%E5%AE%9E%E7%8E%B0/</guid>
        
        
        <category>liuqianchao</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Theano &amp; Tensorflow</title>
        <description>&lt;p&gt;    市面上的深度学习框架不断发布，包括：ConvNet,Caffe(图像),Torch以及Tensorflow，其中最引入瞩目的莫过于来自Google的Tensorflow，在这篇文章中，将对提供Python API的Tensorflow以及Theano作简要介绍。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;1.背景&lt;/h3&gt;
&lt;p&gt;    Theano最初是被设计成一套符号表达系统，Tensorflow类似于Theano，也属于符号编程框架	（微软开源的CNTK也是如此）。&lt;/p&gt;

&lt;p&gt;    选择合适的层数，每层的神经元数量，激活函数，损失函数，正则化的参数，然后使用validation数据来判定这次训练的效果。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2.简介&lt;/h3&gt;
&lt;p&gt;    下面将以Theano为例，通过官方给出的Tutorial介绍其基本框架:   &lt;/p&gt;

&lt;h4 id=&quot;theano&quot;&gt;2.1 Theano&lt;/h4&gt;

&lt;h4 id=&quot;section-2&quot;&gt;2.1.1 代数基础&lt;/h4&gt;
&lt;p&gt;    在Theano中所有的数据对象都必须是Theano类型(&lt;a href=&quot;http://deeplearning.net/software/theano/extending/graphstructures.html#type&quot;&gt;Theano Type&lt;/a&gt;)的,这里在代数运算中引入&lt;strong&gt;标量(scalar)&lt;/strong&gt;的概念,将每一个标量数据通过theano.tensor定义成与python存储数据类型（int,float,double等）相一致的Theano类型(iscalar,fscalar,dscalar等)，且这种对应是一对一(即Python存在的数据类型，Theano中均有实现)。   &lt;/p&gt;

&lt;p&gt;    除了标量(scalar)之外，Theano中还包含&lt;strong&gt;vector&lt;/strong&gt;,&lt;strong&gt;matrix&lt;/strong&gt;，在定义这两种类型的Theano变量时，使用相应的dvector(vector contains double elements),dmatrix即可。   &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://deeplearning.net/software/theano/library/compile/function.html&quot;&gt;&lt;strong&gt;theano.function&lt;/strong&gt;方法&lt;/a&gt;，第一个参数是函数的输入参数列表，第二个参数是返回值的列表，且当列表元素数目为1时，可以省去[].&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano.tensor&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;T&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;In&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dscalar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#using In to set default value: set default value 5 for y, taking place of y by In(y, default=5) &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#shared value, to define a value that can be &lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#Shared变量&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shared&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shared&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;inc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iscalar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;inc&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#UPDATES: An expression which indicates updates to the Value after each function call, also means that expressions for new SharedVariable values&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#UPDATES: (iterable over pairs (shared_variable, new_expression). List, tuple or dict.) &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这里要提一下，在代数运算系统中的一些tips： &lt;br /&gt;
1. &lt;strong&gt;缺省值&lt;/strong&gt; &lt;br /&gt;
    首先就是给function中的变量定义缺省值,通过使用&lt;code&gt;In(y,default=5)&lt;/code&gt;代替原来的变量&lt;code&gt;y&lt;/code&gt;. &lt;br /&gt;
2. &lt;strong&gt;Shared变量&lt;/strong&gt; &lt;br /&gt;
    当你需要在不同的函数中持续使用某一个变量时，一般会定义一个shared变量，通过function中的updates参数来改变shared变量的值，在Theano中使用updates的主要目的是提高运算速度（在GPU上），Theano对其进行了特别的优化。同时，还可以通过使用function的&lt;code&gt;givens=[(var1,var2)]&lt;/code&gt;参数(var1的值被var2替换)，来使用state而不改变state.value. &lt;br /&gt;
    引入shared变量的原因：在进行大量求导运算时(GPU擅长)，需要把gradients数据从GPU传输到CPU，通过shared变量，可以省去这个步骤(计算(GPU)与更新(CPU)可以放在一起进行)，一般在训练网络的过程中会将weights定义为shared variable(that persist in the graph between calls).&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;随机数&lt;/strong&gt;   &lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano.tensor.shared_randomstreams&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RandomStreams&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srng&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RandomStreams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#where rng means that random number generator&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rv_u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srng&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rv_n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srng&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rv_u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.70574274&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.80222456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.25976164&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.18285402&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rv_n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no_default_updates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;#Not updating rv_n.rng&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.37328447&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.65746672&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.36302373&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.97484625&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nearly_zeros&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rv_u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rv_u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rv_u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;    在给随机数设置seed时，一种方法是直接给RandomStreams设置（如上例所示，或srng.seed(234)），另一种方法是对RandomStreams的某一随机分布变量设置seed，比如对rv_u设置seed,需要通过以下的方法,即使用rng.ser_value和rng.get_value()：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rng_val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rv_u&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;borrow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# Get the rng for rv_u&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rng_val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;89234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;c&quot;&gt;# seeds the generator&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rv_u&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rng_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;borrow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# Assign back seeded rng&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;    这里要注意到RandomStream仅工作在CPU环境下（MRG31k3p工作在CPU和GPU下，CURAND仅工作在GPU下）。&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;2.1.2 导数&lt;/h4&gt;
&lt;p&gt;    在Theano中，使用&lt;code&gt;T.grad(y,x)&lt;/code&gt;来计算表达式y（代价函数）关于x（自变量）的导数。 &lt;br /&gt;
    此外可以使用&lt;code&gt;theano.gradient.jacobian()&lt;/code&gt;来计算雅可比矩阵（多元函数的一阶偏导数矩阵），使用&lt;code&gt;theano.gradient.hessian()&lt;/code&gt;来计算海森矩阵（二阶偏导数矩阵）。&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;2.1.3 条件&lt;/h4&gt;
&lt;p&gt;    由于Theano是一种类似于函数式编程的语言，在使用中，Python的if语句只在编译时起作用，编译时会将if判断后的结果进行编译，所以这里需要单独引入条件函数IfElse和Switch。 &lt;br /&gt;
    &lt;code&gt;theano.ifelse(cond, ift, iff)&lt;/code&gt;有三个参数，一个boolean类型的表达式和两个返回变量，&lt;code&gt;tensor.switch(cond, ift, iff)&lt;/code&gt;则为一个tensor和两个返回变量。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano.ifelse&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ifelse&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scalars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;z_switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z_lazy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ifelse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;f_switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theano&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z_switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                           &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theano&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;vm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f_lazyifelse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theano&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z_lazy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theano&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;vm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;scan&quot;&gt;2.1.4 scan&lt;/h4&gt;
&lt;p&gt;    设计scan的目的是为了实现循环（递归）地影响一个对象，其主要有四个参数，fn为每次迭代要进行的操作，是一个函数；sequences(y,p)为迭代序列（for(i in range(10)) 中的range(10)）,其中y为要迭代的次数(如果sequences=None，要通过n_steps参数来指定迭代次数)；outputs_info描述使用到前几次迭代结果作为lambda的参数，non_sequences是非序列化的输入，通常用来存储固定的指定值。(good for RNNs)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theano&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_tm2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_tm1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_tm2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_tm1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;sequences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;outputs_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;taps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])],&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;non_sequences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;section-5&quot;&gt;2.1.5 稀疏&lt;/h4&gt;
&lt;p&gt;    Theano专门对稀疏矩阵制定了处理策略，稀疏矩阵中，只有非0元素才会被存储。这里，稀疏矩阵的存储格式有两种csc和csr，当矩阵的行比较多时，建议使用csc:基于矩阵列的存储格式；当行数较少时，则应选择csr:基于矩阵列的存储格式，两者的区别仅在于存储数据的位置。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparse&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csc_matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;float32&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dense_from_sparse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#将稀疏矩阵转换为密集矩阵&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csm_properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#使用sparse.csm_properties来返回一个tensor变量的元组，来表示稀疏矩阵的内部特征。&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#data 属性是一个一维的 ndarray ，它包含稀疏矩阵所有的非0元素。&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#indices 和indptr 属性是用来存储稀疏矩阵中数据的位置的。&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#shape 属性，准确的说是和密集矩阵的shape属性一样的。如果从前三个属性上没法推断，那么它可以在稀疏矩阵创建的时候显式指定 。&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;other-key-words&quot;&gt;2.1.6 Other key words:&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;theano.tensor.ones_like(x)&lt;/strong&gt; &lt;br /&gt;
Parameters:	x – tensor that has same shape as output &lt;br /&gt;
Returns a tensor filled with 1s that has same shape as x.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;theano.tensor.dot(x,y)&lt;/strong&gt; &lt;br /&gt;
tensor 变量的点乘操作&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;theano.tensor.nnet.softmax(x)&lt;/strong&gt; or &lt;strong&gt;theano.tensor.nnet.sigmoid(x)&lt;/strong&gt; or &lt;strong&gt;theano.tensor.nnet.relu()&lt;/strong&gt;    &lt;br /&gt;
Returns the standard sigmoid nonlinearity applied to x &lt;br /&gt;
Returns the softmax function of x: &lt;br /&gt;
Compute the element-wise rectified linear activation function(激活函数为Rectified Linear Units,Relu易于求导便于反向传播求误差梯度，由于会使一部分神经元输出为0，从而造成网络的稀疏性，减少了参数的相互依存关系).&lt;/p&gt;

&lt;p&gt;此外使用Lasagne、Keras等建立在theano基础上的library可以作为theano的部分或全部替代,此外这些包支持Pretrained model。&lt;/p&gt;

&lt;h4 id=&quot;tensorflow&quot;&gt;2.2 Tensorflow&lt;/h4&gt;
&lt;p&gt;    Tensorflow和theano非常相似，它的一些亮点包括：可视化(TensorBoard),multi-GPU and multi-node training.&lt;/p&gt;

&lt;p&gt;placeholder来代替tensor
Variables来代替shared variables&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;Reference&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;LISA lab &lt;a href=&quot;http://www.deeplearning.net/tutorial/index.html&quot;&gt;Theano 0.7 documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;赵孽 &lt;a href=&quot;https://www.zhihu.com/question/35485591&quot;&gt;如何评价 Theano？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;松尾丰 &lt;a href=&quot;http://book.douban.com/subject/26698202/&quot;&gt;人工智能狂潮&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Kenneth Tran &lt;a href=&quot;https://github.com/zer0n/deepframeworks/blob/master/README.Kenneth Tran md?utm_source=tuicool&amp;amp;utm_medium=referral&quot;&gt;Evaluation of Deep Learning Toolkits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Stanford/vision &lt;a href=&quot;http://vision.stanford.edu/teaching/cs231n/index.html&quot;&gt;CS231n Winter 2016: Convolutional Neural Networks for Visual Recognition&lt;/a&gt;(Lecture 12)&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Tue, 02 Feb 2016 18:00:04 +0800</pubDate>
        <link>http://qianchaoliu.github.io//liuqianchao/update/2016/02/02/Theano&Tensorflow/</link>
        <guid isPermaLink="true">http://qianchaoliu.github.io//liuqianchao/update/2016/02/02/Theano&Tensorflow/</guid>
        
        
        <category>liuqianchao</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Effective Python</title>
        <description>&lt;p&gt;How to modify your Python code style, and use it in a more effective way, this post will introduce the pythonic code style to you.&lt;/p&gt;

&lt;h4 id=&quot;language-sugar-and-suggested-code-style&quot;&gt;Language sugar and suggested code style&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;slice&lt;/strong&gt; &lt;br /&gt;
  You may see [::-1] in python, you also may see [begin:end], which is a brief edition of [begin:end:step]. [begin:end] is suggested, and [begin:end:step] often causes unexpected bugs, for example, it will break for Unicode characters&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;str.format()&lt;/strong&gt;  &lt;br /&gt;
  In C++ ect., %s is used to express a string, it works for python, but the suggested way to express string in python is:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;	&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;greet&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Hello world&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;language&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Python&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(greet)s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; from &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(language)s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;#or&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;{greet} from {language}.&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;greet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Hello world&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Python&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;join&lt;/strong&gt;   &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;	&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;str1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;str2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#instead of using str1+str2.&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;with&lt;/strong&gt; &lt;br /&gt;
  To close a file immediately, use ‘with’ to operate the file.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt; 	&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;files/tex.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
 		&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;first line&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;zip&lt;/strong&gt;
  The zip() built-in function can be used to iterate over multiple iterators in parallel. And in Python 2, zip returns the full result as a list of tuples.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;	&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[(1,4),(2,5),(3,6)]&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;assert&lt;/strong&gt; &lt;br /&gt;
  use assert expression1,expression2 to capture the constraint defined by the user. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;deepcopy&lt;/strong&gt; &lt;br /&gt;
  Distinguish shallow copy from deep copy and ‘=’&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;	&lt;span class=&quot;c&quot;&gt;#= reference&lt;/span&gt;
	&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;copy&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#shallow copy, one time of coping&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deepcopy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#deep copy, copy objects iteratively&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;map&lt;/strong&gt; &lt;br /&gt;
  use &lt;code&gt;map( func, seq1[, seq2...] )&lt;/code&gt; to call a function and return a list of the results, which is equal to &lt;code&gt;[f(x) for x in iterable]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;	&lt;span class=&quot;c&quot;&gt;#first situation: map(func,iterable) where func only has one para&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;#second situation: map(func,iterable1,iterable2) where func(para1,para2) and first elem of iteable1 and iterable2 are used as para1 and para2.&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;#if the func is none, map() is equal to zip()&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;#all constraint to: length of return is equal to length of iterable&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;List comprehensions&lt;/strong&gt; &lt;br /&gt;
  When programming, frequently we want to transform one type of data into another. With the help of list comprehensions we can do it more effectively.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;	&lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;even_squares&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;even_squares&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Prints &amp;quot;[0, 4, 16]&amp;quot;&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Concurrency and Parallelism&lt;/strong&gt; &lt;br /&gt;
  To make full use of the CPU resource of computer. Concurrent(Thread) program may run thousands of separate paths of execution simultaneously. In contrast, the time parallelism(Process) takes to do the total work is cut in half. &lt;br /&gt;
  In python, The existence of GIL(Global Interpreter Lock) means your program could utilize only one thread at the same time. &lt;br /&gt;
  &lt;strong&gt;I/O-bound&lt;/strong&gt;:Use &lt;code&gt;Threading&lt;/code&gt;(false parallelism) for blocking I/O, which may take more time to execute the CPU-bound program. Also use &lt;code&gt;Lock&lt;/code&gt; class in the &lt;code&gt;Threading&lt;/code&gt; to avoid data races which may not be avoid by GIL.
  &lt;strong&gt;CPU-bound&lt;/strong&gt;:Use &lt;code&gt;Multiprocessing&lt;/code&gt;   &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;reference&quot;&gt;Reference&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Brett Slatkin &lt;em&gt;Effective Python&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Y.Zhang, Yh.Lai &lt;em&gt;Writing Solid Python Code&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 15 Jan 2016 18:00:04 +0800</pubDate>
        <link>http://qianchaoliu.github.io//liuqianchao/update/2016/01/15/Effective/</link>
        <guid isPermaLink="true">http://qianchaoliu.github.io//liuqianchao/update/2016/01/15/Effective/</guid>
        
        
        <category>liuqianchao</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Support Vector Machine</title>
        <description>&lt;p&gt;Support Vector Machine(&lt;em&gt;SVM&lt;/em&gt;), k-Nearest Neighbors algorithm(&lt;em&gt;k-NN&lt;/em&gt;), and Naive Bayes classifier(&lt;em&gt;NB&lt;/em&gt;) are the most popular and basic approaches for classification. In this article, I will give some mathmetical equations of &lt;em&gt;SVM&lt;/em&gt; and approaches to use &lt;em&gt;SVM&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;what-is-svm&quot;&gt;1. What is &lt;em&gt;SVM&lt;/em&gt;?&lt;/h3&gt;
&lt;p&gt;In general, there are two kinds of classificaiton, &lt;strong&gt;non-parametric&lt;/strong&gt; and &lt;strong&gt;parametric&lt;/strong&gt; approaches. The parametric approach is to assume a simple parametric model for density functions and to estimate the parameters of the model using an available training set.
However, for most of cases, we can not assume that the desity of data samples can be characterised by a series of parameters in this irregular world. So we introduce the non-parametric method which includes &lt;em&gt;SVM&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;how-it-works&quot;&gt;2. How it works?&lt;/h3&gt;

&lt;h4 id=&quot;maximum-margin-classifier&quot;&gt;2.1 Maximum margin classifier&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;SVM&lt;/em&gt; uses a very simple idea which can be conclude in a word: maximum margin.  &lt;br /&gt;
Suppose that we have a set of training patterns.{&lt;script type=&quot;math/tex&quot;&gt;x_{i},i=1,...,m&lt;/script&gt;} assigned to one of two classes &lt;script type=&quot;math/tex&quot;&gt;\omega_{1}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\omega_{2}&lt;/script&gt;, with corresponding labels &lt;script type=&quot;math/tex&quot;&gt;y_{i}=\pm1&lt;/script&gt;.   &lt;br /&gt;
Denote the linear discriminant function &lt;script type=&quot;math/tex&quot;&gt;g(x)&lt;/script&gt;, where both &lt;script type=&quot;math/tex&quot;&gt;x_{i}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;w&lt;/script&gt; are n-dimension vectors:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
$$g(x_{i})=w^{T}x_{i}+b$$
&lt;/div&gt;
&lt;p&gt;if &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
g(x)&lt;0 %]]&gt;&lt;/script&gt; we see &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; as label &lt;script type=&quot;math/tex&quot;&gt;y_{i}=-1&lt;/script&gt;, and if &lt;script type=&quot;math/tex&quot;&gt;g(x)&gt;0&lt;/script&gt; we see &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; as label &lt;script type=&quot;math/tex&quot;&gt;y_{i}=+1&lt;/script&gt;. Here all points are subject to: &lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
$$y_{i}(w^{T}x_{i}+b)\geq0$$
&lt;/div&gt;
&lt;p&gt;The &lt;strong&gt;hyperplane&lt;/strong&gt; is :&lt;script type=&quot;math/tex&quot;&gt;y_{i}(w^{T}x_{i}+b)=0&lt;/script&gt;. &lt;br /&gt;
Then we introduce &lt;strong&gt;functional margin&lt;/strong&gt; &lt;script type=&quot;math/tex&quot;&gt;\gamma&lt;/script&gt; : &lt;script type=&quot;math/tex&quot;&gt;y_{i}(w^{T}x_{i}+b)&lt;/script&gt;, which is a positive number. &lt;br /&gt;
And the &lt;strong&gt;geometric margin&lt;/strong&gt; &lt;script type=&quot;math/tex&quot;&gt;\tilde{\gamma}&lt;/script&gt;: &lt;script type=&quot;math/tex&quot;&gt;y_{i}(\frac{w^{T}x_{i}}{||w||}+\frac{b}{||w||})&lt;/script&gt;. After introducing the geometric margin, we can scale value of &lt;script type=&quot;math/tex&quot;&gt;w&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt; arbitrarily and without changing the geometric margin and the position of this hyperplane: &lt;script type=&quot;math/tex&quot;&gt;y_{i}(w^{T}x_{i}+b)=0&lt;/script&gt;.
For better classify, we should maximize the margin between two groups by some methods about convex optimization which will change the value of &lt;script type=&quot;math/tex&quot;&gt;w&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt;.   &lt;/p&gt;

&lt;p&gt;To maximize the geometric margin:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;step 1 build the model:&lt;/li&gt;
&lt;/ul&gt;

&lt;div align=&quot;center&quot;&gt;$$\max \limits_{w,b} y_{i}(\frac{w^{T}x_{i}}{||w||}+\frac{b}{||w||})$$&lt;/div&gt;
&lt;p&gt;At first, we constraint that &lt;script type=&quot;math/tex&quot;&gt;||w||=1&lt;/script&gt;, this step can be finished by rescaling the parameters after find solution of &lt;script type=&quot;math/tex&quot;&gt;w^{T}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt;. And this constraint can make sure that geometric and the functional margin are the same. However, this contraint is a nonconvex constraint.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;step 2 convert to convex optimization problem:&lt;/li&gt;
&lt;/ul&gt;

&lt;div align=&quot;center&quot;&gt;$$\min \limits_{w,b} \frac{1}{2}||w||^{2}$$&lt;/div&gt;
&lt;p&gt;Here another constraint has been added: the functional margin &lt;script type=&quot;math/tex&quot;&gt;\gamma=1&lt;/script&gt; which is the same with: &lt;script type=&quot;math/tex&quot;&gt;\min \limits_{i} y_{i}(w^{T}x_{i}+b)=1 &lt;/script&gt;. And this objective function is a quadratic problem.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;step 3 another kind of convex optimization problem(applied for high or infinite dimensional vector):&lt;/li&gt;
&lt;/ul&gt;

&lt;div align=&quot;center&quot;&gt;$$\frac{1}{2}||w||^{2}-\sum_{i=1}^m\alpha_{i}[y_{i}(w^{T}x_{i}+b)-1]$$&lt;/div&gt;
&lt;p&gt;Using the method of &lt;em&gt;Lagrange multipliers&lt;/em&gt;, you construct a Lagrangian and set the partial derivative with respect to the original parameters &lt;script type=&quot;math/tex&quot;&gt;w&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt; and the Lagrange multipliers &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; equal to 0.
The original objective function: &lt;script type=&quot;math/tex&quot;&gt;\min \limits_{w,b} \frac{1}{2}||w||^{2}&lt;/script&gt; , and the constraint function: &lt;script type=&quot;math/tex&quot;&gt;y_{i}(w^{T}x_{i}+b)\geq1&lt;/script&gt;, Then we get the function as showed above. Therefore, to satisfy demand, our objective function turns out:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;$$\min \limits_{w,b}\max \limits_{\alpha_{i}} \frac{1}{2}||w||^{2}-\sum_{i=1}^m\alpha_{i}[y_{i}(w^{T}x_{i}+b)-1]=L_{P}$$&lt;/div&gt;
&lt;p&gt;which is equal to the objective function in step 2. And the dual form of &lt;script type=&quot;math/tex&quot;&gt;L_{P}&lt;/script&gt; is:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;$$\max \limits_{\alpha_{i}}\min \limits_{w,b} \frac{1}{2}||w||^{2}-\sum_{i=1}^m\alpha_{i}[y_{i}(w^{T}x_{i}+b)-1]=L_{D}$$&lt;/div&gt;
&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;L_{D}\leq L_{P}&lt;/script&gt; and function &lt;script type=&quot;math/tex&quot;&gt;L_{P}&lt;/script&gt; must be satisfied with the KKT (5 rules). With &lt;script type=&quot;math/tex&quot;&gt;\frac{\delta L_{P}}{\delta w}=0&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\frac{\delta L_{P}}{\delta b}=0&lt;/script&gt;, we get:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;$$w=\sum_{i=1}^m \alpha_{i} y_{i} x_{i}$$&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;$$\sum_{i=1}^m \alpha_{i} y_{i} = 0$$&lt;/div&gt;
&lt;p&gt;Substituting into &lt;script type=&quot;math/tex&quot;&gt;L_{D}&lt;/script&gt;:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;$$\max \limits_{\alpha_{i}} \sum_{i=1}^m \alpha_{i} - \frac{1}{2} \sum_{i=1}^m \sum_{j=1}^m \alpha_{i} \alpha_{j} y_{i} y_{j} x_{i}^{T} x_{j}$$&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;$$s.t. \alpha_{i}\geq0$$ $$\sum_{i=1}^m \alpha_{i} y_{i} =0$$&lt;/div&gt;
&lt;p&gt;which is also a convex problem, we can get the solution of &lt;script type=&quot;math/tex&quot;&gt;w&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt;.&lt;/p&gt;

&lt;h4 id=&quot;kernel-trick&quot;&gt;2.2 kernel trick&lt;/h4&gt;
&lt;p&gt;Then, we will introduce the concept of &lt;strong&gt;&lt;em&gt;kernel trick&lt;/em&gt;&lt;/strong&gt;. How can we distinguish ◇ from △ showed below? Obiviously, there are no hyperplane to classify one from the other. &lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;   
&lt;canvas id=&quot;myCanvas&quot; width=&quot;250&quot; height=&quot;180&quot; style=&quot;border:0px solid #c3c3c3;&quot;&gt;
Your browser does not support the canvas element. here is graph written by html.
&lt;/canvas&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var c=document.getElementById(&quot;myCanvas&quot;);
var ctx=c.getContext(&quot;2d&quot;);

var txt1=&quot;△                     ◇&quot;;
var txt2=&quot;◇                     △&quot;;
ctx.font = &quot;20px Helvetica red&quot;;            
ctx.textBaseline = &#39;top&#39;;
ctx.fillText(txt1, 40, 0);
ctx.fillText(txt2, 0,130);
&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;One possible way for us to solve this problem is to find out a projection function &lt;script type=&quot;math/tex&quot;&gt;\phi(\cdot)&lt;/script&gt; which will figure out a hyperplane in a higher dimension space. However, this method may also bring the dimension disaster problem. To solve this problem, &lt;em&gt;kernel trick&lt;/em&gt; has been created. &lt;br /&gt;
Instead of &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
&lt;\phi(x_{i}),\phi(x)&gt; %]]&gt;&lt;/script&gt;, here we use kernel function:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;$$K(x_{i},x)$$&lt;/div&gt;
&lt;p&gt;Many kernel functions have been proposed, the most popular menthods are: linear kernel, RBF kernel, polynomial kernel and Sigmoid kernel. &lt;br /&gt;
&lt;strong&gt;Linear kernel&lt;/strong&gt;:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;$$K(x_{i},x)=x_{i}^{T}x$$&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;RBF kernel with width &lt;script type=&quot;math/tex&quot;&gt;\sigma&lt;/script&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;$$K(x_{i},x)=exp(\frac{-||x_{i}-x||^{2}}{2 \sigma^{2}})$$&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;polynomial kernel with degree &lt;script type=&quot;math/tex&quot;&gt;d&lt;/script&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;$$K(x_{i},x)=(x_{i}^{T}x+1)^{d}$$&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sigmoid kernel with parameter &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\theta&lt;/script&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;$$K(x_{i},x)=tanh(kx_{i}^{T}x+\theta)$$&lt;/div&gt;

&lt;h3 id=&quot;using-svm-in-your-work&quot;&gt;3. Using &lt;em&gt;SVM&lt;/em&gt; in your work.&lt;/h3&gt;
&lt;p&gt;There is a package named &lt;strong&gt;&lt;em&gt;scikit-learn&lt;/em&gt;&lt;/strong&gt; in Python. Find information to install it at &lt;a href=&quot;http://scikit-learn.org/stable/index.html&quot;&gt;here&lt;/a&gt;. We can use the official date sets of &lt;em&gt;scikit-learn&lt;/em&gt;, and examine the performance of classification. Here, we use &lt;em&gt;Iris&lt;/em&gt; dataset. There are 3 kinds of iris, each sample has 4 properties which include petal length, petal width, sepal length, and sepal width.    &lt;/p&gt;

&lt;p&gt;In this experiment, we will show how to conduct a binary classification task. We removed one kind of iris, and two groups of iris are left. After this process, we have two kinds of iris, and each kind has 50 samples. And in order to draw two-dimensional chart, two properties are left: petal length and sepal length.&lt;/p&gt;

&lt;h4 id=&quot;handle-the-dataset&quot;&gt;3.1 Handle the dataset&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#acquire and handle dataset.&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datasets&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_iris&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dateset_property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dateset_target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#iris.target[num]=2 is corresponding to the third kind of iris&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dateset_property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dateset_target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateset_property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateset_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;train-the-model&quot;&gt;3.2 Train the model.&lt;/h4&gt;
&lt;p&gt;In this experiment, I apply 4 kinds of kernel function, including &lt;em&gt;linear&lt;/em&gt;,&lt;em&gt;poly&lt;/em&gt;,&lt;em&gt;RBF&lt;/em&gt; and &lt;em&gt;sigmoid&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svm&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.cross_validation&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_test_split&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#split the dataset, and rearrange the list&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_test_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# create a mesh to plot in&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x_min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y_min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meshgrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# title for the plots&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;LinearSVC (linear kernel)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;SVC with polynomial (degree 3) kernel&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;SVC with RBF kernel&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;SVC with Sigmoid kernel&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;clf_linear&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SVC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;linear&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;clf_poly&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SVC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;poly&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;degree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;clf_rbf&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SVC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;clf_sigmoid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SVC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sigmoid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;draw-plot&quot;&gt;3.3 Draw plot&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clf&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clf_linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clf_poly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clf_rbf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clf_sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#result are the predict result of all the meshgrid.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ravel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ravel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()])&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;#set the composition of plot&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots_adjust&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wspace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.35&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hspace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.35&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Put the result into a color plot.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contourf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;terrain&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Plot the training points&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;terrain&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;petal length&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;sepal length&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;result-of-classification&quot;&gt;Result of classification&lt;/h4&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;http://qianchaoliu.github.io//assets/screenshot.png&quot; width=&quot;550&quot; height=&quot;440&quot; /&gt;
&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;
Figure: result of classification
&lt;/div&gt;

&lt;h4 id=&quot;reference&quot;&gt;Reference&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Andrew R. Webb and Keith D. Copsey &lt;em&gt;Statistical Pattern Recognition(Third Edition)&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Martin Law &lt;a href=&quot;http://www.cise.ufl.edu/class/cis4930sp11dtm/notes/intro_svm_new.pdf&quot;&gt;&lt;em&gt;A Simple Introduction to Support Vector Machines&lt;/em&gt;&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Andrew Ng &lt;em&gt;Machine Learning (Stanford CS229)&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 29 Nov 2015 06:35:04 +0800</pubDate>
        <link>http://qianchaoliu.github.io//liuqianchao/update/2015/11/29/SVM/</link>
        <guid isPermaLink="true">http://qianchaoliu.github.io//liuqianchao/update/2015/11/29/SVM/</guid>
        
        
        <category>liuqianchao</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Why R?</title>
        <description>&lt;p&gt;As one of the hottest programming languages, R has attracted lots of attention from people who are interested in data analysis. Although python, an advanced and high-level programming language, has satisfied most of needs for data processing, R still has some special advantages. In this short article, I will give a brief intro to R.  &lt;/p&gt;

&lt;h3 id=&quot;the-advantages&quot;&gt;The advantages&lt;/h3&gt;
&lt;p&gt;More professional packages that are ralated with data analytics have been created, there are more than 7000 packages have been created on &lt;a href=&quot;http://cran.r-project.org&quot;&gt;CRAN&lt;/a&gt; by users and programmers around the world.&lt;/p&gt;

&lt;p&gt;Of course, there are some drawbacks of R, such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Little built in support for dynamic or 3-D graphics.&lt;/li&gt;
  &lt;li&gt;Objects must be stored in physical memory, if the objects are too big, you can not load them into memory.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;some-interesting-packages-in-r&quot;&gt;Some interesting packages in R&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://ggplot2.org/&quot;&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt;
python is good at the process of acquiring and handling data, but the ability of data visualization is 
“relatively weak”. In general, we use &lt;strong&gt;matplotlib&lt;/strong&gt; and other libraries to draw figures in Python. The matpoltlib is one of high quality libraies, however, the number of high quality libraries to draw figures are much smaller than that of R. Here in R, one of the most widely known packages to draw beautiful plots is &lt;strong&gt;ggplot2&lt;/strong&gt;.   &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jliblog.com/app/rweibo&quot;&gt;&lt;strong&gt;Rweibo&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt;
Rweibo is a package based on official API of Sina Weibo. Although there are serious limits of offcial API, such as the maximum quantity of comments allowed for acquiring is 2000 for each Weibo post, the official API can satisfy a smale-scale applicaiton. &lt;br /&gt;
&lt;strong&gt;rMaps&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;can-we-use-r-in-a-more-familiar-way&quot;&gt;Can we use R in a more familiar way?&lt;/h3&gt;
&lt;p&gt;Actually, We can use &lt;strong&gt;rpy2&lt;/strong&gt;, which is an interface to R running embedded in Python. With the help of this interface, we can take advantage of R in the code of Python. &lt;br /&gt;
To install the package of rpy2 (via pip in your terminal): &lt;br /&gt;
 &lt;code&gt;pip install rpy2&lt;/code&gt;   &lt;/p&gt;

&lt;p&gt;Find documentation of rpy2 at &lt;a href=&quot;http://rpy.sourceforge.net/&quot;&gt;rpy.sourceforge.net/&lt;/a&gt; &lt;br /&gt;
In this way, we can complete our daily tasks in codes of Python. &lt;/p&gt;
</description>
        <pubDate>Tue, 10 Nov 2015 06:35:04 +0800</pubDate>
        <link>http://qianchaoliu.github.io//liuqianchao/update/2015/11/10/R/</link>
        <guid isPermaLink="true">http://qianchaoliu.github.io//liuqianchao/update/2015/11/10/R/</guid>
        
        
        <category>liuqianchao</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>About pygments</title>
        <description>&lt;p&gt;Highlight for your code by pygments.&lt;/p&gt;

&lt;h3 id=&quot;about-pygments&quot;&gt;1. About pygments&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;pygments&lt;/strong&gt; is a syntax-highlighting package and Python-based code highlighting tool. With it, can highlight our codes in our website.&lt;/p&gt;

&lt;h3 id=&quot;how-to-intall-it&quot;&gt;2. How to intall it:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Step 1, intall &lt;strong&gt;pygments&lt;/strong&gt;:   &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;
sudo easy_install pygments.
&lt;/code&gt; &lt;br /&gt;
to make sure that your have installed python and easy_intall in your pc   &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Step 2, get &lt;strong&gt;.css&lt;/strong&gt; file :   &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;
pygmentize -f html -S default &amp;gt; pygments.css
&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Step 3, set your jekyll or octopress. Following steps are under the environment of jekyll. &lt;br /&gt;
    &lt;ul&gt;
      &lt;li&gt;copy this .css file to your local files of jekyll:&lt;code&gt;./css&lt;/code&gt;,   &lt;/li&gt;
      &lt;li&gt;add &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/css/pygments.css&quot;&amp;gt;&lt;/code&gt; to your &lt;code&gt;head.html&lt;/code&gt;.   &lt;/li&gt;
      &lt;li&gt;and add &lt;code&gt;highlighter: pygments&lt;/code&gt;to your &lt;code&gt;_config.yml&lt;/code&gt;   &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;result&quot;&gt;3. Result:&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Fri, 10 Oct 2014 06:35:04 +0800</pubDate>
        <link>http://qianchaoliu.github.io//liuqianchao/update/2014/10/10/about_pygments/</link>
        <guid isPermaLink="true">http://qianchaoliu.github.io//liuqianchao/update/2014/10/10/about_pygments/</guid>
        
        
        <category>liuqianchao</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Brief into to LaTeX</title>
        <description>&lt;p&gt;In this short article, I will give a brief introduction to the grammar of LaTeX.   &lt;/p&gt;

&lt;h3 id=&quot;structure-of-tex-file&quot;&gt;1.  Structure of .tex file&lt;/h3&gt;

&lt;h4 id=&quot;basic-elements&quot;&gt;1.1  Basic elements&lt;/h4&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;\documentclass[opt,opt]{class}.&lt;/code&gt; uesd at the very beginning of a document. where &lt;code&gt;opt&lt;/code&gt; can be:   &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Font Size:10pt/11pt/12pt etc.   &lt;/li&gt;
  &lt;li&gt;Papar Size:leterpaper/a4paper etc.   &lt;/li&gt;
  &lt;li&gt;Use two columns:twocolumn.   &lt;/li&gt;
  &lt;li&gt;Set margins for two-sided:twoside.  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and &lt;code&gt;class&lt;/code&gt; can be:   &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;book/report/article/letter/slides   &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;\input{inputfile.tex}&lt;/code&gt; used to include the file specifying ducument layout, which is optional.   &lt;/p&gt;

&lt;p&gt;&lt;code&gt;\author{text}&lt;/code&gt;, &lt;code&gt;\title{text}&lt;/code&gt;, &lt;code&gt;\date{text}&lt;/code&gt; are used to declare proprieties of this file. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;\begin{document}&lt;/code&gt; and &lt;code&gt;\end{document}&lt;/code&gt; used to start contents and end the document  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;\section{text}&lt;/code&gt; used to begin a new section. And &lt;code&gt;\subsection{text}&lt;/code&gt; to create sub-section.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;some other strucures:&lt;code&gt;\part{text}&lt;/code&gt;,&lt;code&gt;\chapter{text}&lt;/code&gt;   &lt;/li&gt;
  &lt;li&gt;in &lt;code&gt;\section*{title}&lt;/code&gt;, to not number a particular item—these items will also not appear in the table of contents.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;key-elements&quot;&gt;1.2  key elements&lt;/h4&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;\begin{tabbing}&lt;/code&gt; and  &lt;code&gt;\end{tabbing}&lt;/code&gt; used to start tabbing and end the tabbing   &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;\hspace{l}&lt;/code&gt;  Horizontal space of length l (Ex:l=20pt or l=3cm). And &lt;code&gt;\vspace{l}&lt;/code&gt; where v means vertical.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;use &lt;code&gt;\=&lt;/code&gt; to &lt;strong&gt;set&lt;/strong&gt; tab stop, and &lt;code&gt;\kill&lt;/code&gt; at the end of the line.
    &lt;ul&gt;
      &lt;li&gt;Ex: &lt;code&gt;\hspace{3cm} \= \hspace{4cm} \= \kill&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;\&amp;gt;&lt;/code&gt; used to &lt;strong&gt;go&lt;/strong&gt; to tab stop (&lt;em&gt;set&lt;/em&gt; once, and &lt;em&gt;go&lt;/em&gt; many times), and &lt;code&gt;\\&lt;/code&gt; is used to separate lines(end this line, and may create a new line).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;\begin{tabular}[position]{cols}&lt;/code&gt; and &lt;code&gt;\end{tabular}&lt;/code&gt;   &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the &lt;code&gt;cols&lt;/code&gt; is decided by your need, it can be &lt;code&gt;l c r&lt;/code&gt; or &lt;code&gt;l c c c c r &lt;/code&gt;and &lt;code&gt;l | c | r&lt;/code&gt; means that inserts a vertical line between columns.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;\hline&lt;/code&gt; Horizontal line between rows. &lt;code&gt;\cline{x-y}&lt;/code&gt; means horizontal line across columns x through y. And x and y are numbers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;text-and-symbols&quot;&gt;2.  Text and symbols&lt;/h3&gt;

&lt;h4 id=&quot;text&quot;&gt;2.1  Text&lt;/h4&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;{\bf text}&lt;/code&gt; or &lt;code&gt;\textbf{text}&lt;/code&gt;bolden the font. &lt;code&gt;{\it text}&lt;/code&gt; to &lt;em&gt;Italic&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\href{mailto:website}{text}&lt;/code&gt;,use href in you text:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ex: &lt;code&gt;\href{mailto:https://www.google.com}{google.com}&lt;/code&gt;   &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;\hfill&lt;/code&gt; Horizontal space betwwen the &lt;em&gt;two&lt;/em&gt; blocks   &lt;/p&gt;

&lt;p&gt;&lt;code&gt;parabox[position]{length}{text}&lt;/code&gt; to put something into the one kind of box.&lt;/p&gt;

&lt;h4 id=&quot;symbols&quot;&gt;2.2  Symbols&lt;/h4&gt;

&lt;hr /&gt;
&lt;p&gt;For inline math, use&lt;code&gt;\(..\)&lt;/code&gt; or &lt;code&gt;$ $&lt;/code&gt;.  &lt;br /&gt;
With the limits of the display in website, more details find at  &lt;a href=&quot;http://www.latex-project.org/&quot;&gt;offical document of LaTeX&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;some-other-important-things-you-should-also-know&quot;&gt;3.  Some other important things you should also know:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The test environment in this passage is &lt;a href=&quot;http://tug.org/mactex/morepackages.html&quot;&gt;MacTex&lt;/a&gt;.   &lt;/li&gt;
  &lt;li&gt;To use LateX in &lt;a href=&quot;www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;, you can find steps of configuration at &lt;a href=&quot;http://economistry.com/2013/01/installing-and-using-latex-for-mac/&quot;&gt;here&lt;/a&gt;.   &lt;/li&gt;
  &lt;li&gt;To use Chinese characters in your LaTeX, you can use &lt;strong&gt;xelatex&lt;/strong&gt; Engine. Adding &lt;code&gt;%!TEX program = xelatex&lt;/code&gt; at the beginning of your LaTeX code.&lt;/li&gt;
  &lt;li&gt;To install more available package:&lt;code&gt;tlmgr install &amp;lt;package&amp;gt;&lt;/code&gt; in your terminal&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 22 Sep 2014 06:35:04 +0800</pubDate>
        <link>http://qianchaoliu.github.io//liuqianchao/update/2014/09/22/LATEX/</link>
        <guid isPermaLink="true">http://qianchaoliu.github.io//liuqianchao/update/2014/09/22/LATEX/</guid>
        
        
        <category>liuqianchao</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Js Primary</title>
        <description>&lt;h2 id=&quot;javascript&quot;&gt;JavaScript&lt;/h2&gt;
&lt;p&gt;导入js&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
\&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
&amp;lt;/script&amp;gt;
or
\&amp;lt;script src=&quot;&quot;&amp;gt;
&amp;lt;/script&amp;gt;
js代码的存放位置：可以放在html的任何位置，好的习惯是放在head或body
&lt;/code&gt;  &lt;/p&gt;

&lt;p&gt;注释&lt;/p&gt;

&lt;p&gt;```
/*
多行注释
*/&lt;/p&gt;

&lt;p&gt;//单行注释
```&lt;/p&gt;

&lt;p&gt;变量&lt;/p&gt;

&lt;p&gt;&lt;code&gt;var 变量名区分大小写&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;逻辑判断  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;
if(条件)｛｝  
else{}
&lt;/code&gt;
函数&lt;/p&gt;

&lt;p&gt;```
function 函数名()
{&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;函数的调用
&lt;input type=&quot;button&quot; onclick=&quot;函数名()&quot; /&gt;
&amp;lt;/input&amp;gt;
```&lt;/p&gt;

&lt;p&gt;几个常用的js函数&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
document.write();//直接向html输出文本
alter();//警告，出现弹框，包含一个确定按钮
confirm();//confirm消息对话框，有一个返回值为true 或 false
prompt();//包含确定、取消、文本输入框，返回值为string
window.open(url,&amp;lt;窗口名称&amp;gt;,&amp;lt;参数字符串&amp;gt;)//返回一个窗口对象
window.close();或窗口对象.close();//关闭当前窗口，
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;DOM&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
//获取元素：
Object=document.getElementById(&quot;ID&quot;)//通过id获取元素
//获取或替换html元素的内容
Object.innerHTML
//改变html元素的样式
Object.style.color;Object.style.backgroundColor;
Object.style.display=&quot;block&quot;or&quot;none&quot;;
//为元素改变css样式
Object.className
&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Aug 2014 23:49:04 +0800</pubDate>
        <link>http://qianchaoliu.github.io//liuqianchao/update/2014/08/21/Js-primary/</link>
        <guid isPermaLink="true">http://qianchaoliu.github.io//liuqianchao/update/2014/08/21/Js-primary/</guid>
        
        
        <category>liuqianchao</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Markdown入门</title>
        <description>&lt;h1 id=&quot;markdown&quot;&gt;Markdown入门&lt;/h1&gt;
&lt;p&gt;Markdown,作为一种文档结构描述语言，其文本结构仅对应HTML语言的一个子集，其实现原理是通过正则表达式进行HTML标签的替换，其目的是为了更方便地书写审阅纯文本文档。&lt;/p&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;标题&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;使用#代表标题的等级，一个#为一级标题，六个#为六级标题&lt;/p&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;强调&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;使用*文字*，添加&lt;em&gt;斜体文字&lt;/em&gt;&lt;br /&gt;
  使用**文字**，添加&lt;strong&gt;粗体文字&lt;/strong&gt;&lt;br /&gt;
  使用---作为一条横线&lt;/p&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;代码&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;使用```（反引号）将代码块括起来&lt;/p&gt;

&lt;p&gt;``` python&lt;br /&gt;
print “test”
```  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;python
 print&quot;test&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;引用超链接或图片&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;！[描述](地址) 作为图片引用&lt;br /&gt;
[描述](地址) 作为超链接引用  &lt;/p&gt;

&lt;p&gt;[维基百科](wikipedia.org)  &lt;br /&gt;
&lt;a href=&quot;wikipedia.org&quot;&gt;维基百科&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;其他常用技巧&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;单个反引号作为highlight
`高亮`
&lt;code&gt;高亮&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;*(空格)文字 作为无序列表
 * 列表&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;列表&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 07 Aug 2014 08:35:04 +0800</pubDate>
        <link>http://qianchaoliu.github.io//liuqianchao/update/2014/08/07/Markdown%E5%85%A5%E9%97%A8/</link>
        <guid isPermaLink="true">http://qianchaoliu.github.io//liuqianchao/update/2014/08/07/Markdown%E5%85%A5%E9%97%A8/</guid>
        
        
        <category>liuqianchao</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
